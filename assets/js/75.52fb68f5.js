(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{386:function(t,a,s){"use strict";s.r(a);var e=s(3),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"version-21-12-lts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#version-21-12-lts"}},[t._v("#")]),t._v(" Version 21.12 (LTS)")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#introduction"}},[t._v("Introduction")])]),s("li",[s("a",{attrs:{href:"#what-to-know"}},[t._v("What to know")]),s("ul",[s("li",[s("a",{attrs:{href:"#strict-application-and-blueprint-names"}},[t._v("Strict application and blueprint names")])]),s("li",[s("a",{attrs:{href:"#strict-application-and-blueprint-properties"}},[t._v("Strict application and blueprint properties")])]),s("li",[s("a",{attrs:{href:"#removals"}},[t._v("Removals")])]),s("li",[s("a",{attrs:{href:"#upgrade-your-streaming-responses-if-not-already"}},[t._v("Upgrade your streaming responses (if not already)")])]),s("li",[s("a",{attrs:{href:"#cli-overhaul-and-motd-message-of-the-day"}},[t._v("CLI overhaul and MOTD (Message of the Day)")])]),s("li",[s("a",{attrs:{href:"#server-running-modes-and-changes-coming-to-debug"}},[t._v("Server running modes and changes coming to debug")])]),s("li",[s("a",{attrs:{href:"#max-allowed-workers"}},[t._v("Max allowed workers")])]),s("li",[s("a",{attrs:{href:"#first-class-sanic-extensions-support"}},[t._v("First-class Sanic Extensions support")])]),s("li",[s("a",{attrs:{href:"#contextual-exceptions"}},[t._v("Contextual exceptions")])]),s("li",[s("a",{attrs:{href:"#background-task-management"}},[t._v("Background task management")])]),s("li",[s("a",{attrs:{href:"#route-context-kwargs-in-definitions"}},[t._v("Route context kwargs in definitions")])]),s("li",[s("a",{attrs:{href:"#blueprints-can-be-registered-at-any-time"}},[t._v("Blueprints can be registered at any time")])]),s("li",[s("a",{attrs:{href:"#noisy-exceptions-force-all-exceptions-to-logs"}},[t._v("Noisy exceptions (force all exceptions to logs)")])]),s("li",[s("a",{attrs:{href:"#signal-events-as-enum"}},[t._v("Signal events as Enum")])]),s("li",[s("a",{attrs:{href:"#custom-type-casting-of-environment-variables"}},[t._v("Custom type casting of environment variables")])]),s("li",[s("a",{attrs:{href:"#disable-uvloop-by-configuration-value"}},[t._v("Disable uvloop by configuration value")])]),s("li",[s("a",{attrs:{href:"#run-sanic-server-with-multiple-tls-certificates"}},[t._v("Run Sanic server with multiple TLS certificates")])])])]),s("li",[s("a",{attrs:{href:"#news"}},[t._v("News")]),s("ul",[s("li",[s("a",{attrs:{href:"#coming-soon-python-web-development-with-sanic"}},[t._v("Coming Soon: Python Web Development with Sanic")])]),s("li",[s("a",{attrs:{href:"#dark-mode-for-the-docs"}},[t._v("Dark mode for the docs")])])])]),s("li",[s("a",{attrs:{href:"#thank-you"}},[t._v("Thank you")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("This is the final release of the version 21 "),s("RouterLink",{attrs:{to:"/en/org/policies.html#release-schedule"}},[t._v("release cycle")]),t._v(". Version 21 will now enter long-term support and will be supported for two years until December 2023.")],1),t._v(" "),s("h2",{attrs:{id:"what-to-know"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-to-know"}},[t._v("#")]),t._v(" What to know")]),t._v(" "),s("p",[t._v("More details in the "),s("a",{attrs:{href:"https://sanic.readthedocs.io/en/stable/sanic/changelog.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Changelog"),s("OutboundLink")],1),t._v(". Notable new or breaking features, and what to upgrade...")]),t._v(" "),s("h3",{attrs:{id:"strict-application-and-blueprint-names"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strict-application-and-blueprint-names"}},[t._v("#")]),t._v(" Strict application and blueprint names")]),t._v(" "),s("p",[t._v("In "),s("RouterLink",{attrs:{to:"/en/guide/release-notes/v21.6.html#stricter-application-and-blueprint-names-and-deprecation"}},[t._v("v21.6")]),t._v(" application and blueprint names were required to conform to a new set of restrictions. That change is now being enforced at startup time.")],1),t._v(" "),s("p",[t._v("Names "),s("strong",[t._v("must")]),t._v(":")]),t._v(" "),s("ol",[s("li",[t._v("Only use alphanumeric characters ("),s("code",[t._v("a-zA-Z0-9")]),t._v(")")]),t._v(" "),s("li",[t._v("May contain a hyphen ("),s("code",[t._v("-")]),t._v(") or an underscore ("),s("code",[t._v("_")]),t._v(")")]),t._v(" "),s("li",[t._v("Must begin with a letter or underscore ("),s("code",[t._v("a-zA-Z_")]),t._v(")")])]),t._v(" "),s("h3",{attrs:{id:"strict-application-and-blueprint-properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strict-application-and-blueprint-properties"}},[t._v("#")]),t._v(" Strict application and blueprint properties")]),t._v(" "),s("p",[t._v("The old leniency to allow directly setting properties of a "),s("code",[t._v("Sanic")]),t._v(" or "),s("code",[t._v("Blueprint")]),t._v(" object was deprecated and no longer allowed. You must use the "),s("code",[t._v("ctx")]),t._v(" object.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sanic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyApp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"removals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#removals"}},[t._v("#")]),t._v(" Removals")]),t._v(" "),s("p",[t._v("The following deprecated features no longer exist:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("sanic.exceptions.abort")])]),t._v(" "),s("li",[s("code",[t._v("sanic.views.CompositionView")])]),t._v(" "),s("li",[s("code",[t._v("sanic.response.StreamingHTTPResponse")])])]),t._v(" "),s("h3",{attrs:{id:"upgrade-your-streaming-responses-if-not-already"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upgrade-your-streaming-responses-if-not-already"}},[t._v("#")]),t._v(" Upgrade your streaming responses (if not already)")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("sanic.response.stream")]),t._v(" response method has been "),s("strong",[t._v("deprecated")]),t._v(" and will be removed in v22.6. If you are sill using an old school streaming response, please upgrade it.")]),t._v(" "),s("p",[s("strong",[t._v("OLD - Deprecated")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sample_streaming_fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo,"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("route")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sample_streaming_fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/csv"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Current")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sample_streaming_fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo,"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("route")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("respond"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/csv"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo,"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"cli-overhaul-and-motd-message-of-the-day"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli-overhaul-and-motd-message-of-the-day"}},[t._v("#")]),t._v(" CLI overhaul and MOTD (Message of the Day)")]),t._v(" "),s("p",[t._v("The Sanic CLI has received a fairly extensive upgrade. It adds a bunch of new features to make it on par with "),s("code",[t._v("app.run()")]),t._v(". It also includes a new MOTD display to provide quick, at-a-glance highlights about your running environment. The MOTD is TTY-aware, and therefore will be less verbose in server logs. It is mainly intended as a convenience during application development.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ sanic --help\nusage: sanic [-h] [--version] [--factory] [-s] [-H HOST] [-p PORT] [-u UNIX] [--cert CERT] [--key KEY] [--tls DIR] [--tls-strict-host]\n             [-w WORKERS | --fast] [--access-logs | --no-access-logs] [--debug] [-d] [-r] [-R PATH] [--motd | --no-motd] [-v]\n             [--noisy-exceptions | --no-noisy-exceptions]\n             module\n\n   ▄███ █████ ██      ▄█▄      ██       █   █   ▄██████████\n  ██                 █   █     █ ██     █   █  ██\n   ▀███████ ███▄    ▀     █    █   ██   ▄   █  ██\n               ██  █████████   █     ██ █   █  ▄▄\n  ████ ████████▀  █         █  █       ██   █   ▀██ ███████\n\n To start running a Sanic application, provide a path to the module, where\n app is a Sanic() instance:\n\n     $ sanic path.to.server:app\n\n Or, a path to a callable that returns a Sanic() instance:\n\n     $ sanic path.to.factory:create_app --factory\n\n Or, a path to a directory to run as a simple HTTP server:\n\n     $ sanic ./path/to/static --simple\n\nRequired\n========\n  Positional:\n    module                         Path to your Sanic app. Example: path.to.server:app\n                                   If running a Simple Server, path to directory to serve. Example: ./\n\nOptional\n========\n  General:\n    -h, --help                     show this help message and exit\n    --version                      show program's version number and exit\n\n  Application:\n    --factory                      Treat app as an application factory, i.e. a () -> <Sanic app> callable\n    -s, --simple                   Run Sanic as a Simple Server, and serve the contents of a directory\n                                   (module arg should be a path)\n\n  Socket binding:\n    -H HOST, --host HOST           Host address [default 127.0.0.1]\n    -p PORT, --port PORT           Port to serve on [default 8000]\n    -u UNIX, --unix UNIX           location of unix socket\n\n  TLS certificate:\n    --cert CERT                    Location of fullchain.pem, bundle.crt or equivalent\n    --key KEY                      Location of privkey.pem or equivalent .key file\n    --tls DIR                      TLS certificate folder with fullchain.pem and privkey.pem\n                                   May be specified multiple times to choose multiple certificates\n    --tls-strict-host              Only allow clients that send an SNI matching server certs\n\n  Worker:\n    -w WORKERS, --workers WORKERS  Number of worker processes [default 1]\n    --fast                         Set the number of workers to max allowed\n    --access-logs                  Display access logs\n    --no-access-logs               No display access logs\n\n  Development:\n    --debug                        Run the server in debug mode\n    -d, --dev                      Currently is an alias for --debug. But starting in v22.3, \n                                   --debug will no longer automatically trigger auto_restart. \n                                   However, --dev will continue, effectively making it the \n                                   same as debug + auto_reload.\n    -r, --reload, --auto-reload    Watch source directory for file changes and reload on changes\n    -R PATH, --reload-dir PATH     Extra directories to watch and reload on changes\n\n  Output:\n    --motd                         Show the startup display\n    --no-motd                      No show the startup display\n    -v, --verbosity                Control logging noise, eg. -vv or --verbosity=2 [default 0]\n    --noisy-exceptions             Output stack traces for all exceptions\n    --no-noisy-exceptions          No output stack traces for all exceptions\n")])])]),s("h3",{attrs:{id:"server-running-modes-and-changes-coming-to-debug"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server-running-modes-and-changes-coming-to-debug"}},[t._v("#")]),t._v(" Server running modes and changes coming to "),s("code",[t._v("debug")])]),t._v(" "),s("p",[t._v("There are now two running modes: "),s("code",[t._v("DEV")]),t._v(" and "),s("code",[t._v("PRODUCTION")]),t._v(". By default, Sanic server will run under "),s("code",[t._v("PRODUCTION")]),t._v(" mode. This is intended for deployments.")]),t._v(" "),s("p",[t._v("Currently, "),s("code",[t._v("DEV")]),t._v(" mode will operate very similarly to how "),s("code",[t._v("debug=True")]),t._v(" does in older Sanic versions. However, in v22.3. "),s("code",[t._v("debug=True")]),t._v(" will "),s("strong",[t._v("no longer")]),t._v(" enable auto-reload. If you would like to have debugging and auto-reload, you should enable "),s("code",[t._v("DEV")]),t._v(" mode.")]),t._v(" "),s("p",[s("strong",[t._v("DEVELOPMENT")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ sanic server:app --dev\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" auto_reload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("PRODUCTION")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ sanic server:app\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Beginning in v22.3, "),s("code",[t._v("PRODUCTION")]),t._v(" mode will no longer enable access logs by default.")]),t._v(" "),s("p",[t._v("A summary of the changes are as follows:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Flag")]),t._v(" "),s("th",[t._v("Mode")]),t._v(" "),s("th",[t._v("Tracebacks")]),t._v(" "),s("th",[t._v("Logging")]),t._v(" "),s("th",[t._v("Access logs")]),t._v(" "),s("th",[t._v("Reload")]),t._v(" "),s("th",[t._v("Max workers")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("--debug")]),t._v(" "),s("td",[t._v("DEBUG")]),t._v(" "),s("td",[t._v("yes")]),t._v(" "),s("td",[t._v("DEBUG")]),t._v(" "),s("td",[t._v("yes")]),t._v(" "),s("td",[t._v("^1")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("PROD")]),t._v(" "),s("td",[t._v("no")]),t._v(" "),s("td",[t._v("INFO ^2")]),t._v(" "),s("td",[t._v("^3")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("--dev")]),t._v(" "),s("td",[t._v("DEBUG")]),t._v(" "),s("td",[t._v("yes")]),t._v(" "),s("td",[t._v("DEBUG")]),t._v(" "),s("td",[t._v("yes")]),t._v(" "),s("td",[t._v("yes")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("--fast")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("yes")])])])]),t._v(" "),s("ul",[s("li",[t._v("^1 "),s("code",[t._v("--debug")]),t._v(" to deprecate auto-reloading and remove in 22.3")]),t._v(" "),s("li",[t._v("^2 After 22.3 this moves to WARNING")]),t._v(" "),s("li",[t._v("^3 After 22.3: no")])]),t._v(" "),s("h3",{attrs:{id:"max-allowed-workers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#max-allowed-workers"}},[t._v("#")]),t._v(" Max allowed workers")]),t._v(" "),s("p",[t._v("You can easily spin up the maximum number of allowed workers using "),s("code",[t._v("--fast")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ sanic server:app --fast\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fast"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"first-class-sanic-extensions-support"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-class-sanic-extensions-support"}},[t._v("#")]),t._v(" First-class Sanic Extensions support")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/en/plugins/sanic-ext/getting-started.html"}},[t._v("Sanic Extensions")]),t._v(" provides a number of additional features specifically intended for API developers. You can now easily implement all of the functionality it has to offer without additional setup as long as the package is in the environment. These features include:")],1),t._v(" "),s("ul",[s("li",[t._v("Auto create "),s("code",[t._v("HEAD")]),t._v(", "),s("code",[t._v("OPTIONS")]),t._v(", and "),s("code",[t._v("TRACE")]),t._v(" endpoints")]),t._v(" "),s("li",[t._v("CORS protection")]),t._v(" "),s("li",[t._v("Predefined, endpoint-specific response serializers")]),t._v(" "),s("li",[t._v("Dependency injection into route handlers")]),t._v(" "),s("li",[t._v("OpenAPI documentation with Redoc and/or Swagger")]),t._v(" "),s("li",[t._v("Request query arguments and body input validation")])]),t._v(" "),s("p",[t._v("The preferred method is to install it along with Sanic, but you can also install the packages on their own.")]),t._v(" "),s("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ pip install sanic[ext]\n")])])])]),t._v(" "),s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ pip install sanic sanic-ext\n")])])])])]),t._v(" "),s("p",[t._v("After that, no additional configuration is required. Sanic Extensions will be attached to your application and provide all of the additional functionality with "),s("strong",[t._v("no further configuration")]),t._v(".")]),t._v(" "),s("p",[t._v("If you want to change how it works, or provide additional configuration, you can change Sanic extensions using "),s("code",[t._v("app.extend")]),t._v(". The following examples are equivalent. The "),s("code",[t._v("Config")]),t._v(" object is to provide helpful type annotations for IDE development.")]),t._v(" "),s("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is optional, not required")]),t._v("\napp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sanic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyApp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"oas_url_prefix"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/apidocs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is optional, not required")]),t._v("\napp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sanic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyApp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OAS_URL_PREFIX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/apidocs"')]),t._v("\n")])])])])]),t._v(" "),s("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is optional, not required")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic_ext "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Config\n\napp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sanic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyApp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oas_url_prefix"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/apidocs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}})]),t._v(" "),s("h3",{attrs:{id:"contextual-exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contextual-exceptions"}},[t._v("#")]),t._v(" Contextual exceptions")]),t._v(" "),s("p",[t._v("In "),s("RouterLink",{attrs:{to:"/en/guide/release-notes/v21.9.html#default-exception-messages"}},[t._v("v21.9")]),t._v(" we added default messages to exceptions that simplify the ability to consistently raise exceptions throughout your application.")],1),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TeapotError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SanicException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    status_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("418")]),t._v("\n    message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sorry, I cannot brew coffee"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" TeapotError\n")])])]),s("p",[t._v("But this lacked two things:")]),t._v(" "),s("ol",[s("li",[t._v("A dynamic and predictable message format")]),t._v(" "),s("li",[t._v("The ability to add additional context to an error message (more on this in a moment)")])]),t._v(" "),s("p",[t._v("The current release allows any Sanic exception to have additional information to when raised to provide context when writing an error message:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TeapotError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SanicException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    status_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("418")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@property")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Sorry ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(', I cannot make you coffee"')])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" TeapotError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extra"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Adam"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("The new feature allows the passing of "),s("code",[t._v("extra")]),t._v(" meta to the exception instance. This "),s("code",[t._v("extra")]),t._v(" info object "),s("strong",[t._v("will be suppressed")]),t._v(" when in "),s("code",[t._v("PRODUCTION")]),t._v(" mode, but displayed in "),s("code",[t._v("DEVELOPMENT")]),t._v(" mode.")]),t._v(" "),s("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("p",[s("strong",[t._v("PRODUCTION")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/166269/139014161-cda67cd1-843f-4ad2-9fa1-acb94a59fc4d.png",alt:"image"}})])]),t._v(" "),s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("p",[s("strong",[t._v("DEVELOPMENT")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/166269/139014121-0596b084-b3c5-4adb-994e-31ba6eba6dad.png",alt:"image"}})])])]),t._v(" "),s("p",[t._v("Getting back to item 2 from above: "),s("em",[t._v("The ability to add additional context to an error message")])]),t._v(" "),s("p",[t._v("This is particularly useful when creating microservices or an API that you intend to pass error messages back in JSON format. In this use case, we want to have some context around the exception beyond just a parseable error message to return details to the client.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" TeapotError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("This is information "),s("strong",[t._v("that we want")]),t._v(" to always be passed in the error (when it is available). Here is what it should look like:")]),t._v(" "),s("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("p",[s("strong",[t._v("PRODUCTION")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I\'m a teapot"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("418")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sorry Adam, I cannot make you coffee"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"context"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("p",[s("strong",[t._v("DEVELOPMENT")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I\'m a teapot"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("418")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sorry Adam, I cannot make you coffee"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"context"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extra"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Adam"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"more"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lines"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"complex"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"one"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"two"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"path"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"args"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exceptions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TeapotError"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exception"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sorry Adam, I cannot make you coffee"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"frames"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"file"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"handle_request"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"line"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("83")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"handle_request"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"src"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"file"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/p.py"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"line"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"handler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"src"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"raise TeapotError("')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"background-task-management"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#background-task-management"}},[t._v("#")]),t._v(" Background task management")]),t._v(" "),s("p",[t._v("When using the "),s("code",[t._v("app.add_task")]),t._v(" method to create a background task, there now is the option to pass an optional "),s("code",[t._v("name")]),t._v(" keyword argument that allows it to be fetched, or cancelled.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dummy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dummy_task"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntask "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dummy_task"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cancel_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dummy_task"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"route-context-kwargs-in-definitions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#route-context-kwargs-in-definitions"}},[t._v("#")]),t._v(" Route context kwargs in definitions")]),t._v(" "),s("p",[t._v("When a route is defined, you can add any number of keyword arguments with a "),s("code",[t._v("ctx_")]),t._v(" prefix. These values will be injected into the route "),s("code",[t._v("ctx")]),t._v(" object.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctx_label"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctx_label"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/99"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_request")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_something")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("h3",{attrs:{id:"blueprints-can-be-registered-at-any-time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#blueprints-can-be-registered-at-any-time"}},[t._v("#")]),t._v(" Blueprints can be registered at any time")]),t._v(" "),s("p",[t._v("In previous versions of Sanic, there was a strict ordering of when a Blueprint could be attached to an application. If you ran "),s("code",[t._v("app.blueprint(bp)")]),t._v(" "),s("em",[t._v("before")]),t._v(" attaching all objects to the Blueprint instance, they would be missed.")]),t._v(" "),s("p",[t._v("Now, you can attach a Blueprint at anytime and everything attached to it will be included at startup.")]),t._v(" "),s("h3",{attrs:{id:"noisy-exceptions-force-all-exceptions-to-logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#noisy-exceptions-force-all-exceptions-to-logs"}},[t._v("#")]),t._v(" Noisy exceptions (force all exceptions to logs)")]),t._v(" "),s("p",[t._v("There is a new "),s("code",[t._v("NOISY_EXCEPTIONS")]),t._v(" config value. When it is "),s("code",[t._v("False")]),t._v(" (which is the default), Sanic will respect the "),s("code",[t._v("quiet")]),t._v(" property of any "),s("code",[t._v("SanicException")]),t._v(". This means that an exception with "),s("code",[t._v("quiet=True")]),t._v(" will not be displayed to the log output.")]),t._v(" "),s("p",[t._v("However, when setting "),s("code",[t._v("NOISY_EXCEPTIONS=True")]),t._v(", all exceptions will be logged regardless of the "),s("code",[t._v("quiet")]),t._v(" value.")]),t._v(" "),s("p",[t._v("This can be helpful when debugging.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NOISY_EXCEPTIONS "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),s("h3",{attrs:{id:"signal-events-as-enum"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signal-events-as-enum"}},[t._v("#")]),t._v(" Signal events as "),s("code",[t._v("Enum")])]),t._v(" "),s("p",[t._v("There is an "),s("code",[t._v("Enum")]),t._v(" with all of the built-in signal values for convenience.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("signals "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Event\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("signal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTTP_LIFECYCLE_BEGIN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connection_opened")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conn_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("h3",{attrs:{id:"custom-type-casting-of-environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#custom-type-casting-of-environment-variables"}},[t._v("#")]),t._v(" Custom type casting of environment variables")]),t._v(" "),s("p",[t._v("By default, Sanic will convert an "),s("code",[t._v("int")]),t._v(", "),s("code",[t._v("float")]),t._v(", or a "),s("code",[t._v("bool")]),t._v(" value when applying environment variables to the "),s("code",[t._v("config")]),t._v(" instance. You can extend this with your own converter:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sanic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("converters"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UUID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"disable-uvloop-by-configuration-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#disable-uvloop-by-configuration-value"}},[t._v("#")]),t._v(" Disable "),s("code",[t._v("uvloop")]),t._v(" by configuration value")]),t._v(" "),s("p",[t._v("The usage of "),s("code",[t._v("uvloop")]),t._v(" can be controlled by configuration value:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("USE_UVLOOP "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n")])])]),s("h3",{attrs:{id:"run-sanic-server-with-multiple-tls-certificates"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-sanic-server-with-multiple-tls-certificates"}},[t._v("#")]),t._v(" Run Sanic server with multiple TLS certificates")]),t._v(" "),s("p",[t._v("Sanic can be run with multiple TLS certificates:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    ssl"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/letsencrypt/live/example.com/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/letsencrypt/live/mysite.example/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"news"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#news"}},[t._v("#")]),t._v(" News")]),t._v(" "),s("h3",{attrs:{id:"coming-soon-python-web-development-with-sanic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#coming-soon-python-web-development-with-sanic"}},[t._v("#")]),t._v(" Coming Soon: Python Web Development with Sanic")]),t._v(" "),s("p",[t._v("A book about Sanic is coming soon by one of the core developers, "),s("a",{attrs:{href:"https://github.com/ahopkins",target:"_blank",rel:"noopener noreferrer"}},[t._v("@ahopkins"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Learn more at "),s("a",{attrs:{href:"https://sanicbook.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("sanicbook.com"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("blockquote",[s("p",[t._v("Get equipped with the practical knowledge of working with Sanic to increase the performance and scalability of your web applications. While doing that, we will level-up your development skills as you learn to customize your application to meet the changing business needs without having to significantly over-engineer the app.")])]),t._v(" "),s("p",[t._v("A portion of book proceeds goes into the Sanic Community Organization to help fund the development and operation of Sanic. So, buying the book is another way you can support Sanic.")]),t._v(" "),s("h3",{attrs:{id:"dark-mode-for-the-docs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dark-mode-for-the-docs"}},[t._v("#")]),t._v(" Dark mode for the docs")]),t._v(" "),s("p",[t._v("If you have not already noticed, this Sanic website is now available in a native dark mode. You can toggle the theme at the top right of the page.")]),t._v(" "),s("h2",{attrs:{id:"thank-you"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thank-you"}},[t._v("#")]),t._v(" Thank you")]),t._v(" "),s("p",[t._v("Thank you to everyone that participated in this release: 👏")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/adarsharegmi",target:"_blank",rel:"noopener noreferrer"}},[t._v("@adarsharegmi"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/ahopkins",target:"_blank",rel:"noopener noreferrer"}},[t._v("@ahopkins"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/ashleysommer",target:"_blank",rel:"noopener noreferrer"}},[t._v("@ashleysommer"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/ChihweiLHBird",target:"_blank",rel:"noopener noreferrer"}},[t._v("@ChihweiLHBird"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/cnicodeme",target:"_blank",rel:"noopener noreferrer"}},[t._v("@cnicodeme"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/kianmeng",target:"_blank",rel:"noopener noreferrer"}},[t._v("@kianmeng"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/meysam81",target:"_blank",rel:"noopener noreferrer"}},[t._v("@meysam81"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/nuxion",target:"_blank",rel:"noopener noreferrer"}},[t._v("@nuxion"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/prryplatypus",target:"_blank",rel:"noopener noreferrer"}},[t._v("@prryplatypus"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/realDragonium",target:"_blank",rel:"noopener noreferrer"}},[t._v("@realDragonium"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/SaidBySolo",target:"_blank",rel:"noopener noreferrer"}},[t._v("@SaidBySolo"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/sjsadowski",target:"_blank",rel:"noopener noreferrer"}},[t._v("@sjsadowski"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/tronic",target:"_blank",rel:"noopener noreferrer"}},[t._v("@Tronic"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/Varriount",target:"_blank",rel:"noopener noreferrer"}},[t._v("@Varriount"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/vltr",target:"_blank",rel:"noopener noreferrer"}},[t._v("@vltr"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/whos4n3",target:"_blank",rel:"noopener noreferrer"}},[t._v("@whos4n3"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("And, a special thank you to "),s("a",{attrs:{href:"https://github.com/miss85246",target:"_blank",rel:"noopener noreferrer"}},[t._v("@miss85246"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://github.com/ZinkLu",target:"_blank",rel:"noopener noreferrer"}},[t._v("@ZinkLu"),s("OutboundLink")],1),t._v(" for their tremendous work keeping the documentation synced and translated into Chinese.")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("If you enjoy the project, please consider contributing. Of course we love code contributions, but we also love contributions in any form. Consider writing some documentation, showing off use cases, joining conversations and making your voice known, and if you are able: "),s("a",{attrs:{href:"https://opencollective.com/sanic-org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("financial contributions"),s("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);a.default=n.exports}}]);