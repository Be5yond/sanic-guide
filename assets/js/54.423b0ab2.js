(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{385:function(t,a,e){"use strict";e.r(a);var s=e(5),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"development"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[t._v("#")]),t._v(" Development")]),t._v(" "),a("p",[t._v("The first thing that should be mentioned is that the webserver that is integrated into Sanic is "),a("strong",[t._v("not")]),t._v(" just a development server.")]),t._v(" "),a("p",[t._v("It is production ready out-of-the-box, "),a("em",[t._v("unless you enable in debug mode")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"debug-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debug-mode"}},[t._v("#")]),t._v(" Debug mode")]),t._v(" "),a("p",[t._v("By setting the debug mode, Sanic will be more verbose in its output and will disable several run-time optimizations.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server.py")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Sanic\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" json\n\napp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sanic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__name__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("route")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello_world")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("sanic server:app "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--debug")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("Sanic's debug mode will slow down the server's performance and is therefore advised to enable it only in development environments.")])]),t._v(" "),a("h2",{attrs:{id:"automatic-reloader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automatic-reloader"}},[t._v("#")]),t._v(" Automatic Reloader")]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("Sanic offers a way to enable or disable the Automatic Reloader. The easiest way to enable it is using the CLI's "),a("code",[t._v("--reload")]),t._v(" argument to activate the Automatic Reloader. Every time a Python file is changed, the reloader will restart your application automatically. This is very convenient while developing.")]),t._v(" "),a("p",[a("em",[t._v("NOTE: The reloader is only available when using Sanic's "),a("RouterLink",{attrs:{to:"/en/guide/deployment/manager.html"}},[t._v("worker manager")]),t._v(". If you have disabled it using "),a("code",[t._v("--single-process")]),t._v(" then the reloader will not be available to you.")],1)])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("sanic path.to:app "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reload")]),t._v("\n")])])]),a("p",[t._v("You can also use the shorthand property")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("sanic path.to:app "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v("\n")])])])])]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("If you have additional directories that you would like to automatically reload on file save (for example, a directory of HTML templates), you can add that using "),a("code",[t._v("--reload-dir")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("sanic path.to:app "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reload")]),t._v(" --reload-dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/path/to/templates\n")])])]),a("p",[t._v("Or multiple directories, shown here using the shorthand properties")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("sanic path.to:app "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-R")]),t._v(" /path/to/one "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-R")]),t._v(" /path/to/two\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"best-of-both-worlds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#best-of-both-worlds"}},[t._v("#")]),t._v(" Best of both worlds")]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("If you would like to be in debug mode "),a("strong",[t._v("and")]),t._v(" have the Automatic Reloader running, you can pass "),a("code",[t._v("dev=True")]),t._v(". This is equivalent to "),a("strong",[t._v("debug + auto reload")]),t._v(".")]),t._v(" "),a("p",[a("em",[t._v("Added in v22.3")])])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("sanic path.to:app "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--dev")]),t._v("\n")])])]),a("p",[t._v("You can also use the shorthand property")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("sanic path.to:app "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"automatic-tls-certificate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automatic-tls-certificate"}},[t._v("#")]),t._v(" Automatic TLS certificate")]),t._v(" "),a("p",[t._v("When running in "),a("code",[t._v("DEBUG")]),t._v(" mode, you can ask Sanic to handle setting up localhost temporary TLS certificates. This is helpful if you want to access your local development environment with "),a("code",[t._v("https://")]),t._v(".")]),t._v(" "),a("p",[t._v("This functionality is provided by either "),a("a",{attrs:{href:"https://github.com/FiloSottile/mkcert",target:"_blank",rel:"noopener noreferrer"}},[t._v("mkcert"),a("OutboundLink")],1),t._v(" or "),a("a",{attrs:{href:"https://github.com/python-trio/trustme",target:"_blank",rel:"noopener noreferrer"}},[t._v("trustme"),a("OutboundLink")],1),t._v(". Both are good choices, but there are some differences. "),a("code",[t._v("trustme")]),t._v(" is a Python library and can be installed into your environment with "),a("code",[t._v("pip")]),t._v(". This makes for easy envrionment handling, but it is not compatible when running a HTTP/3 server. "),a("code",[t._v("mkcert")]),t._v(" might be a more involved installation process, but can install a local CA and make it easier to use.")]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("You can choose which platform to use by setting "),a("code",[t._v("config.LOCAL_CERT_CREATOR")]),t._v(". When set to "),a("code",[t._v('"auto"')]),t._v(", it will select either option, preferring "),a("code",[t._v("mkcert")]),t._v(" if possible.")])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOCAL_CERT_CREATOR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"auto"')]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOCAL_CERT_CREATOR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mkcert"')]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOCAL_CERT_CREATOR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trustme"')]),t._v("\n")])])])])]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("Automatic TLS can be enabled at Sanic server run time:")])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("sanic path.to.server:app --auto-tls "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--debug")]),t._v("\n")])])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("Localhost TLS certificates (like those generated by both "),a("code",[t._v("mkcert")]),t._v(" and "),a("code",[t._v("trustme")]),t._v(") are "),a("strong",[t._v("NOT")]),t._v(" suitable for production environments. If you are not familiar with how to obtain a "),a("em",[t._v("real")]),t._v(" TLS certificate, checkout the "),a("RouterLink",{attrs:{to:"/en/guide/how-to/tls.html"}},[t._v("How to...")]),t._v(" section.")],1)]),t._v(" "),a("p",[a("em",[t._v("Added in v22.6")])])])}),[],!1,null,null,null);a.default=r.exports}}]);