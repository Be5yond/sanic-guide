(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{654:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"시작하기-getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#시작하기-getting-started"}},[t._v("#")]),t._v(" 시작하기(Getting Started)")]),t._v(" "),a("p",[t._v("시작하기 전에 Python 3.7 이상을 사용 중인지 확인하세요. 현재 Python 버전 3.7, 3.8 및 3.9에서 작동하는 것으로 알려져 있습니다.")]),t._v(" "),a("h2",{attrs:{id:"설치-install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#설치-install"}},[t._v("#")]),t._v(" 설치(Install)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" sanic\n")])])]),a("h2",{attrs:{id:"hello-world-애플리케이션-hello-world-application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hello-world-애플리케이션-hello-world-application"}},[t._v("#")]),t._v(" Hello, world 애플리케이션(Hello, world application)")]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("데코레이터 기반 프레임워크를 사용해 본 적이 있다면 아마 익숙할 것입니다.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Flask 또는 다른 프레임워크를 사용하다 온 경우 몇 가지 짚고 넘어가야 할 중요한 것들이 있습니다. 기억하세요, Sanic은 성능, 유연성 및 사용 편의성을 목표로 합니다. 이러한 지침 원칙은 API 및 작동 방식에 실질적인 영향을 미칩니다.")])])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Sanic\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" text\n\napp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sanic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Hello, world app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello_world")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"중요-사항-important-to-note"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#중요-사항-important-to-note"}},[t._v("#")]),t._v(" 중요 사항(Important to note)")]),t._v(" "),a("ul",[a("li",[t._v("모든 요청 핸들러는 동기 ("),a("code",[t._v("def hello_world")]),t._v(") 또는 비동기 ("),a("code",[t._v("async def hello_world")]),t._v(") 둘 다 사용할 수 있습니다. 하지만 명확한 이유가 없는 한 항상 "),a("code",[t._v("async")]),t._v("를 사용하세요.")]),t._v(" "),a("li",[a("code",[t._v("request")]),t._v(" 객체는 항상 핸들러의 첫 번째 인수입니다. 다른 프레임워크는 가져올 컨텍스트 변수에서 이를 전달합니다. "),a("code",[t._v("비동기(async)")]),t._v("환경에서는 이런 기능이 제대로 작동하지 않을 수 있으며, 명시적으로 전달하는것이 (보다 깨끗하고 성능이 뛰어난 것은 말할 것도 없고) 훨씬 더 쉽게 사용할 수 있습니다.")]),t._v(" "),a("li",[t._v("응답 유형(response type)을 "),a("strong",[t._v("반드시")]),t._v(" 사용해야 합니다. 대부분의 다른 프레임워크에서는 "),a("code",[t._v('return "Hello, world."')]),t._v("또는"),a("code",[t._v('return {"foo": "bar"}')]),t._v("와 같은 반환 값을 사용할 수 있습니다. 그러나 이러한 암시적인 호출을 수행하려면 체인 어딘가에서 의미를 파악하는 데 귀한 시간이 소비됩니다. 따라서 Sanic은 이러한 편의성을 희생하면서 명시적인 호출을 요구하기로 결정했습니다.")])]),t._v(" "),a("h3",{attrs:{id:"실행-running"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#실행-running"}},[t._v("#")]),t._v(" 실행(Running)")]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("위에서 작성한 파일을 "),a("code",[t._v("server.py")]),t._v("로 저장하고 실행해 보겠습니다.")])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("sanic server.app\n")])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("strong",[t._v("또 다른")]),t._v(" 중요한 차이점입니다. 다른 프레임워크는 개발 서버가 내장되어 있으며 개발 전용이라고 "),a("em",[t._v("명시적")]),t._v(" 으로 말합니다. Sanic은 그 반대입니다.")]),t._v(" "),a("p",[a("strong",[t._v("프로덕션 환경에서 사용할 수 있는 서버가 준비되있습니다.")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);