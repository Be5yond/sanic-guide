(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{408:function(t,e,a){"use strict";a.r(e);var s=a(4),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"version-22-9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#version-22-9"}},[t._v("#")]),t._v(" Version 22.9")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#introduction"}},[t._v("Introduction")])]),e("li",[e("a",{attrs:{href:"#what-to-know"}},[t._v("What to know")]),e("ul",[e("li",[e("a",{attrs:{href:"#warning-important-new-worker-manager-rocket"}},[t._v("‚ö†Ô∏è IMPORTANT - New worker manager üöÄ")])]),e("li",[e("a",{attrs:{href:"#middleware-priority"}},[t._v("Middleware priority")])]),e("li",[e("a",{attrs:{href:"#custom-loads-function"}},[t._v("Custom loads function")])]),e("li",[e("a",{attrs:{href:"#websocket-objects-are-now-iterable"}},[t._v("Websocket objects are now iterable")])]),e("li",[e("a",{attrs:{href:"#appropriately-respond-with-304-on-static-files"}},[t._v("Appropriately respond with 304 on static files")])]),e("li",[e("a",{attrs:{href:"#two-new-signals-to-wrap-handler-execution"}},[t._v("Two new signals to wrap handler execution")])]),e("li",[e("a",{attrs:{href:"#new-request-properties-for-http-method-information"}},[t._v("New Request properties for HTTP method information")])]),e("li",[e("a",{attrs:{href:"#üö®-breaking-change-improved-cancel-request-exception"}},[t._v("üö® BREAKING CHANGE - Improved cancel request exception")])]),e("li",[e("a",{attrs:{href:"#new-deprecation-warning-filter"}},[t._v("New deprecation warning filter")])]),e("li",[e("a",{attrs:{href:"#deprecations-and-removals"}},[t._v("Deprecations and Removals")])])])]),e("li",[e("a",{attrs:{href:"#thank-you"}},[t._v("Thank you")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("This is the third release of the version 22 "),e("RouterLink",{attrs:{to:"/en/org/policies.html#release-schedule"}},[t._v("release cycle")]),t._v('. Version 22 will be "finalized" in the December long-term support version release.')],1),t._v(" "),e("h2",{attrs:{id:"what-to-know"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-to-know"}},[t._v("#")]),t._v(" What to know")]),t._v(" "),e("p",[t._v("More details in the "),e("a",{attrs:{href:"https://sanic.readthedocs.io/en/stable/sanic/changelog.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Changelog"),e("OutboundLink")],1),t._v(". Notable new or breaking features, and what to upgrade...")]),t._v(" "),e("h3",{attrs:{id:"important-new-worker-manager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#important-new-worker-manager"}},[t._v("#")]),t._v(" ‚ö†Ô∏è "),e("em",[t._v("IMPORTANT")]),t._v(" - New worker manager üöÄ")]),t._v(" "),e("p",[t._v("Sanic server has been overhauled to provide more consistency and flexbility in how it operates. More details about the motivations are outlined in "),e("a",{attrs:{href:"https://github.com/sanic-org/sanic/pull/2499",target:"_blank",rel:"noopener noreferrer"}},[t._v("PR #2499"),e("OutboundLink")],1),t._v(" and discussed in a live stream "),e("a",{attrs:{href:"https://youtu.be/m8HCO8NK7HE",target:"_blank",rel:"noopener noreferrer"}},[t._v("discussion held on YouTube"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("This "),e("strong",[t._v("does NOT apply")]),t._v(" to Sanic in ASGI mode")]),t._v(" "),e("h4",{attrs:{id:"overview-of-the-changes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview-of-the-changes"}},[t._v("#")]),t._v(" Overview of the changes")]),t._v(" "),e("ul",[e("li",[t._v("The worker servers will "),e("strong",[t._v("always")]),t._v(" run in a child process.\n"),e("ul",[e("li",[t._v("Previously this could change depending upon one versus many workers, and the usage or not of the reloader. This should lead to much more predictable development environments that more closely match their production counterparts.")])])]),t._v(" "),e("li",[t._v("Multi-workers is "),e("strong",[t._v("now supported on Windows")]),t._v(".\n"),e("ul",[e("li",[t._v("This was impossible because Sanic relied upon the "),e("code",[t._v("multiprocessing")]),t._v(" module using "),e("code",[t._v("fork")]),t._v(", which is not available on Windows.")]),t._v(" "),e("li",[t._v("Now, Sanic will always use "),e("code",[t._v("spawn")]),t._v(". This does have some noticeable differences, particularly if you are running Sanic in the global scope with "),e("code",[t._v("app.run")]),t._v(" (see below re: upgrade issues).")])])]),t._v(" "),e("li",[t._v("The application instance now has a new "),e("code",[t._v("multiplexer")]),t._v(" object that can be used to restart one or many workers. This could, for example, be triggered by a request.")]),t._v(" "),e("li",[t._v("There is a new Inspector that can provide details on the state of your server.")]),t._v(" "),e("li",[t._v("Sanic worker manager can run arbitrary processes.\n"),e("ul",[e("li",[t._v("This allows developers to add any process they want from within Sanic.")]),t._v(" "),e("li",[t._v("Possible use cases:\n"),e("ul",[e("li",[t._v("Health monitor, see "),e("a",{attrs:{href:""}},[t._v("Sanic Extensions")])]),t._v(" "),e("li",[t._v("Logging queue, see "),e("a",{attrs:{href:""}},[t._v("Sanic Extensions")])]),t._v(" "),e("li",[t._v("Background worker queue in a seperate process")]),t._v(" "),e("li",[t._v("Running another application, like a bot")])])])])]),t._v(" "),e("li",[t._v("There is a new listener called: "),e("code",[t._v("main_process_ready")]),t._v(". It really should only be used for adding arbitrary processes to Sanic.")]),t._v(" "),e("li",[t._v("Passing shared objects between workers.\n"),e("ul",[e("li",[t._v("Python does allow some types of objects to share state between processes, whether through shared memory, pipes, etc.")]),t._v(" "),e("li",[t._v("Sanic will now allow these types of object to be shared on the "),e("code",[t._v("app.shared_ctx")]),t._v(" object.")]),t._v(" "),e("li",[t._v("Since this feature relies upon Pythons "),e("code",[t._v("multiprocessing")]),t._v(" library, it obviously will only work to share state between Sanic worker instances that are instantiated from the same execution. This is "),e("em",[t._v("not")]),t._v(" meant to provide an API for horizontal scaling across multiple machines for example.")])])])]),t._v(" "),e("h4",{attrs:{id:"adding-a-shared-context-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-a-shared-context-object"}},[t._v("#")]),t._v(" Adding a shared context object")]),t._v(" "),e("p",[t._v("To share an object between worker processes, it "),e("em",[t._v("MUST")]),t._v(" be assigned inside of the "),e("code",[t._v("main_process_start")]),t._v(" listener.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" multiprocessing "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Queue\n\n"),e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("main_process_start")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main_process_start")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared_ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Queue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("All objects on "),e("code",[t._v("shared_ctx")]),t._v(" will be available now within each worker process.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("before_server_starts")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("before_server_starts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared_ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Queue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_request")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on_request")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared_ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Queue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared_ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Queue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("em",[t._v("NOTE: Sanic will not stop you from registering an unsafe object, but may warn you. Be careful not to just add a regular list object, for example, and expect it to work. You should have an understanding of how to share state between processes.")])]),t._v(" "),e("h4",{attrs:{id:"running-arbitrary-processes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#running-arbitrary-processes"}},[t._v("#")]),t._v(" Running arbitrary processes")]),t._v(" "),e("p",[t._v("Sanic can run any arbitrary process for you. It should be capable of being stopped by a "),e("code",[t._v("SIGINT")]),t._v(" or "),e("code",[t._v("SIGTERM")]),t._v(" OS signal.")]),t._v(" "),e("p",[t._v("These processes should be registered inside of the "),e("code",[t._v("main_process_ready")]),t._v(" listener.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("main_process_ready")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ready")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Sanic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyProcess"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" my_process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   app.manager.manage(<name>, <callable>, <kwargs>)")]),t._v("\n")])])]),e("h4",{attrs:{id:"inspector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inspector"}},[t._v("#")]),t._v(" Inspector")]),t._v(" "),e("p",[t._v("Sanic ships with an optional Inspector, which is a special process that allows for the CLI to inspect the running state of an application and issue commands. It currently will only work if the CLI is being run on the same machine as the Sanic instance.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sanic path.to:app --inspect\n")])])]),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/166269/190099384-2f2f3fae-22d5-4529-b279-8446f6b5f9bd.png",alt:"Sanic inspector"}})]),t._v(" "),e("p",[t._v("The new CLI commands are:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    --inspect                      Inspect the state of a running instance, human readable\n    --inspect-raw                  Inspect the state of a running instance, JSON output\n    --trigger-reload               Trigger worker processes to reload\n    --trigger-shutdown             Trigger all processes to shutdown\n")])])]),e("p",[t._v("This is not enabled by default. In order to have it available, you must opt in:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INSPECTOR "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),e("p",[t._v("*Note: "),e("a",{attrs:{href:""}},[t._v("Sanic Extensions")]),t._v(" provides a "),e("RouterLink",{attrs:{to:"/en/guide/basics/app.html#custom-requests"}},[t._v("custom request")]),t._v(" class that will add a request counter to the server state.")],1),t._v(" "),e("h4",{attrs:{id:"application-multiplexer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-multiplexer"}},[t._v("#")]),t._v(" Application multiplexer")]),t._v(" "),e("p",[t._v("Many of the same information and functionality is available on the application instance itself. There is a new "),e("code",[t._v("multiplexer")]),t._v(" object on the application instance that has the ability to restart one or more workers, and fetch information about the current state.")]),t._v(" "),e("p",[t._v("You can access it as "),e("code",[t._v("app.multiplexer")]),t._v(", or more likely by its short alias "),e("code",[t._v("app.m")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_request")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_state")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("m"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h4",{attrs:{id:"potential-upgrade-issues"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#potential-upgrade-issues"}},[t._v("#")]),t._v(" Potential upgrade issues")]),t._v(" "),e("p",[t._v("Because of the switch from "),e("code",[t._v("fork")]),t._v(" to "),e("code",[t._v("spawn")]),t._v(", if you try running the server in the global scope you will receive an error. If you see something like this:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('sanic.exceptions.ServerError: Sanic server could not start: [Errno 98] Address already in use.\nThis may have happened if you are running Sanic in the global scope and not inside of a `if __name__ == "__main__"` block.\n')])])]),e("p",[t._v("... then the change is simple. Make sure "),e("code",[t._v("app.run")]),t._v(" is inside a block.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9999")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dev"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h4",{attrs:{id:"opting-out-of-the-new-functionality"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opting-out-of-the-new-functionality"}},[t._v("#")]),t._v(" Opting out of the new functionality")]),t._v(" "),e("p",[t._v("If you would like to run Sanic without the new process manager, you may easily use the legacy runners. Please note that support for them "),e("strong",[t._v("will be removed")]),t._v(" in the future. A date has not yet been set, but will likely be sometime in 2023.")]),t._v(" "),e("p",[t._v("To opt out of the new server and use the legacy, choose the appropriate method depending upon how you run Sanic:")]),t._v(" "),e("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("p",[t._v("If you use the CLI...")])]),t._v(" "),e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sanic path.to:app --legacy\n")])])])])]),t._v(" "),e("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("p",[t._v("If you use "),e("code",[t._v("app.run")]),t._v("...")])]),t._v(" "),e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("app.run(..., legacy=True)\n")])])])])]),t._v(" "),e("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("p",[t._v("If you "),e("code",[t._v("app.prepare")]),t._v("...")])]),t._v(" "),e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("app.prepare(...)\nSanic.serve_legacy()\n")])])])])]),t._v(" "),e("p",[t._v("Similarly, you can force Sanic to run in a single process. This however means there will not be any access to the auto-reloader.")]),t._v(" "),e("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("p",[t._v("If you use the CLI...")])]),t._v(" "),e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sanic path.to:app --single-process\n")])])])])]),t._v(" "),e("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("p",[t._v("If you use "),e("code",[t._v("app.run")]),t._v("...")])]),t._v(" "),e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("app.run(..., single_process=True)\n")])])])])]),t._v(" "),e("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("p",[t._v("If you "),e("code",[t._v("app.prepare")]),t._v("...")])]),t._v(" "),e("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("app.prepare(...)\nSanic.serve_single()\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"middleware-priority"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#middleware-priority"}},[t._v("#")]),t._v(" Middleware priority")]),t._v(" "),e("p",[t._v("Middleware is executed in an order based upon when it was defined. Request middleware are executed in sequence and response middleware in reverse. This could have an unfortunate impact if your ordering is strictly based upon import ordering with global variables for example.")]),t._v(" "),e("p",[t._v("A new addition is to break-out of the strict construct and allow a priority to be assigned to a middleware. The higher the number for a middleware definition, the earlier in the sequence it will be executed. This applies to "),e("strong",[t._v("both")]),t._v(" request and response middleware.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_request")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("low_priority")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_request")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priority"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("high_priority")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),e("p",[t._v("In the above example, even though "),e("code",[t._v("low_priority")]),t._v(" is defined first, "),e("code",[t._v("high_priority")]),t._v(" will run first.")]),t._v(" "),e("h3",{attrs:{id:"custom-loads-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-loads-function"}},[t._v("#")]),t._v(" Custom "),e("code",[t._v("loads")]),t._v(" function")]),t._v(" "),e("p",[t._v("Sanic has supported the ability to add a "),e("a",{attrs:{href:"https://sanic.readthedocs.io/en/stable/sanic/api/app.html#sanic.app.Sanic",target:"_blank",rel:"noopener noreferrer"}},[t._v("custom "),e("code",[t._v("dumps")]),t._v(" function"),e("OutboundLink")],1),t._v(" when instantiating an app. The same functionality has been extended to "),e("code",[t._v("loads")]),t._v(", which will be used when deserializing.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" json "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" loads\n\nSanic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Test"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" loads"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("loads"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"websocket-objects-are-now-iterable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websocket-objects-are-now-iterable"}},[t._v("#")]),t._v(" Websocket objects are now iterable")]),t._v(" "),e("p",[t._v("Rather than calling "),e("code",[t._v("recv")]),t._v(" in a loop on a "),e("code",[t._v("Websocket")]),t._v(" object, you can iterate on it in a "),e("code",[t._v("for")]),t._v(" loop.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Websocket\n\n"),e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("websocket")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ws"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ws_echo_handler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ws"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Websocket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" msg "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ws"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" ws"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"appropriately-respond-with-304-on-static-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#appropriately-respond-with-304-on-static-files"}},[t._v("#")]),t._v(" Appropriately respond with 304 on static files")]),t._v(" "),e("p",[t._v("When serving a static file, the Sanic server can respond appropriately to a request with "),e("code",[t._v("If-Modified-Since")]),t._v(" using a "),e("code",[t._v("304")]),t._v(" response instead of resending a file.")]),t._v(" "),e("h3",{attrs:{id:"two-new-signals-to-wrap-handler-execution"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#two-new-signals-to-wrap-handler-execution"}},[t._v("#")]),t._v(" Two new signals to wrap handler execution")]),t._v(" "),e("p",[t._v("Two new "),e("RouterLink",{attrs:{to:"/en/guide/advanced/signals.html"}},[t._v("signals")]),t._v(" have been added that wrap the execution of a request handler.")],1),t._v(" "),e("ul",[e("li",[e("code",[t._v("http.handler.before")]),t._v(" - runs after request middleware but before the route handler")]),t._v(" "),e("li",[e("code",[t._v("http.handler.after")]),t._v(" - runs after the route handler\n"),e("ul",[e("li",[t._v("In "),e("em",[t._v("most")]),t._v(" circumstances, this also means that it will run before response middleware. However, if you call "),e("code",[t._v("request.respond")]),t._v(" from inside of a route handler, then your middleware will come first")])])])]),t._v(" "),e("h3",{attrs:{id:"new-request-properties-for-http-method-information"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-request-properties-for-http-method-information"}},[t._v("#")]),t._v(" New Request properties for HTTP method information")]),t._v(" "),e("p",[t._v("The HTTP specification defines which HTTP methods are: safe, idempotent, and cacheable. New properties have been added that will respond with a boolean flag to help identify the request property based upon the method.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_safe\nrequest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_idempotent\nrequest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_cacheable\n")])])]),e("h3",{attrs:{id:"üö®-breaking-change-improved-cancel-request-exception"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#üö®-breaking-change-improved-cancel-request-exception"}},[t._v("#")]),t._v(" üö® "),e("em",[t._v("BREAKING CHANGE")]),t._v(" - Improved cancel request exception")]),t._v(" "),e("p",[t._v("In prior version of Sanic, if a "),e("code",[t._v("CancelledError")]),t._v(" was caught it could bubble up and cause the server to respond with a "),e("code",[t._v("503")]),t._v(". This is not always the desired outcome, and it prevented the usage of that error in other circumstances. As a result, Sanic will now use a subclass of "),e("code",[t._v("CancelledError")]),t._v(" called: "),e("code",[t._v("RequestCancelled")]),t._v(" for this functionality. It likely should have little impact unless you were explicitly relying upon the old behavior.")]),t._v(" "),e("p",[t._v("For more details on the specifics of these properties, checkout the "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN docs"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"new-deprecation-warning-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-deprecation-warning-filter"}},[t._v("#")]),t._v(" New deprecation warning filter")]),t._v(" "),e("p",[t._v("You can control the level of deprecation warnings from Sanic using "),e("a",{attrs:{href:"https://docs.python.org/3/library/warnings.html#the-warnings-filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("standard library warning filter values"),e("OutboundLink")],1),t._v(". Default is "),e("code",[t._v('"once"')]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEPRECATION_FILTER "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),t._v("\n")])])]),e("h3",{attrs:{id:"deprecations-and-removals"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deprecations-and-removals"}},[t._v("#")]),t._v(" Deprecations and Removals")]),t._v(" "),e("ol",[e("li",[e("em",[t._v("DEPRECATED")]),t._v(" - Duplicate route names have been deprecated and will be removed in v23.3")]),t._v(" "),e("li",[e("em",[t._v("DEPRECATED")]),t._v(" - Registering duplicate exception handlers has been deprecated and will be removed in v23.3")]),t._v(" "),e("li",[e("em",[t._v("REMOVED")]),t._v(" - "),e("code",[t._v("route.ctx")]),t._v(" not set by Sanic, and is a blank object for users, therefore ...\n"),e("ul",[e("li",[e("code",[t._v("route.ctx.ignore_body")]),t._v(" >> "),e("code",[t._v("route.extra.ignore_body")])]),t._v(" "),e("li",[e("code",[t._v("route.ctx.stream")]),t._v(" >> "),e("code",[t._v("route.extra.stream")])]),t._v(" "),e("li",[e("code",[t._v("route.ctx.hosts")]),t._v(" >> "),e("code",[t._v("route.extra.hosts")])]),t._v(" "),e("li",[e("code",[t._v("route.ctx.static")]),t._v(" >> "),e("code",[t._v("route.extra.static")])]),t._v(" "),e("li",[e("code",[t._v("route.ctx.error_format")]),t._v(" >> "),e("code",[t._v("route.extra.error_format")])]),t._v(" "),e("li",[e("code",[t._v("route.ctx.websocket")]),t._v(" >> "),e("code",[t._v("route.extra.websocket")])])])]),t._v(" "),e("li",[e("em",[t._v("REMOVED")]),t._v(" - "),e("code",[t._v("app.debug")]),t._v(" is READ-ONLY")]),t._v(" "),e("li",[e("em",[t._v("REMOVED")]),t._v(" - "),e("code",[t._v("app.is_running")]),t._v(" removed")]),t._v(" "),e("li",[e("em",[t._v("REMOVED")]),t._v(" - "),e("code",[t._v("app.is_stopping")]),t._v(" removed")]),t._v(" "),e("li",[e("em",[t._v("REMOVED")]),t._v(" - "),e("code",[t._v("Sanic._uvloop_setting")]),t._v(" removed")]),t._v(" "),e("li",[e("em",[t._v("REMOVED")]),t._v(" - Prefixed environment variables will be ignored if not uppercase")])]),t._v(" "),e("h2",{attrs:{id:"thank-you"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#thank-you"}},[t._v("#")]),t._v(" Thank you")]),t._v(" "),e("p",[t._v("Thank you to everyone that participated in this release: üëè")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/ahopkins",target:"_blank",rel:"noopener noreferrer"}},[t._v("@ahopkins"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/azimovMichael",target:"_blank",rel:"noopener noreferrer"}},[t._v("@azimovMichael"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/ChihweiLHBird",target:"_blank",rel:"noopener noreferrer"}},[t._v("@ChihweiLHBird"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/huntzhan",target:"_blank",rel:"noopener noreferrer"}},[t._v("@huntzhan"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/monosans",target:"_blank",rel:"noopener noreferrer"}},[t._v("@monosans"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/prryplatypus",target:"_blank",rel:"noopener noreferrer"}},[t._v("@prryplatypus"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/SaidBySolo",target:"_blank",rel:"noopener noreferrer"}},[t._v("@SaidBySolo"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/seemethere",target:"_blank",rel:"noopener noreferrer"}},[t._v("@seemethere"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/sjsadowski",target:"_blank",rel:"noopener noreferrer"}},[t._v("@sjsadowski"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/timgates42",target:"_blank",rel:"noopener noreferrer"}},[t._v("@timgates42"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://github.com/Tronic",target:"_blank",rel:"noopener noreferrer"}},[t._v("@Tronic"),e("OutboundLink")],1)]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("If you enjoy the project, please consider contributing. Of course we love code contributions, but we also love contributions in any form. Consider writing some documentation, showing off use cases, joining conversations and making your voice known, and if you are able: "),e("a",{attrs:{href:"https://opencollective.com/sanic-org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("financial contributions"),e("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);