(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{642:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"핸들러-handlers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#핸들러-handlers"}},[t._v("#")]),t._v(" 핸들러(Handlers)")]),t._v(" "),a("p",[t._v("다음으로 중요한 구성요소는 "),a("em",[t._v("handlers")]),t._v(' (핸들러) 입니다. 이를 "views" (뷰) 라고도 합니다.')]),t._v(" "),a("p",[t._v("Sanic에서 핸들러는 "),a("code",[t._v("Request")]),t._v(" 인스턴스를 인수로 취하는 모든 호출 가능한 함수(Callable) 입니다, 그리고 "),a("code",[t._v("HTTP Response")]),t._v(" 인스턴스 또는 같은 작업을 수행하는 코루틴(coroutine)을 반환합니다.")]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("어라? 😕")]),t._v(" "),a("p",[t._v("이것은 일반 함수일 수도 있고, 비동기 함수일 수도 있습니다.")]),t._v(" "),a("p",[t._v("핸들러의 역할은 엔드 포인트에 응답하여 무언가를 하는 것입니다. 이것은 대부분의 비즈니스 로직이 적용되는 곳입니다.")])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("i_am_a_handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" HTTPResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("i_am_ALSO_a_handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" HTTPResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Heads up")]),t._v(" "),a("p",[t._v("논리 캡슐화에 대해 자세히 알아보려면 "),a("RouterLink",{attrs:{to:"/guide/advanced/class-based-views.html"}},[t._v("클래스 기반 뷰")]),t._v("를 확인하세요.")],1)]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("그 다음 엔드포인트(endpoint)에 연결하기만 하면 됩니다. 곧 "),a("RouterLink",{attrs:{to:"/ko/guide/basics/routing.html"}},[t._v("라우팅")]),t._v("에서 자세히 알아 보겠습니다.")],1),t._v(" "),a("p",[t._v("실용적인 예를 살펴보겠습니다.")]),t._v(" "),a("ul",[a("li",[t._v("앱 인스턴스에 편리한 데코레이터를 사용합니다 :"),a("code",[t._v("@ app.get ()")])]),t._v(" "),a("li",[t._v("응답 객체를 생성하기 위한 편리한 방법: "),a("code",[t._v("text()")])])]),t._v(" "),a("p",[t._v("임무 완수 💪")])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" text\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo_handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I said foo!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"비동기-async-란-단어에-대하여-a-word-about-async"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#비동기-async-란-단어에-대하여-a-word-about-async"}},[t._v("#")]),t._v(" "),a("em",[t._v("비동기(Async)")]),t._v(" 란 단어에 대하여...(A word about async...)")]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("동기식 핸들러를 작성하는 것도 당연히 가능합니다.")]),t._v(" "),a("p",[t._v("이 예에서는 "),a("em",[t._v("블로킹(blocking)")]),t._v(" "),a("code",[t._v("time.sleep()")]),t._v("을 사용하여 100ms의 처리 시간을 시뮬레이션합니다.\n이것은 DB 또는 타사 웹 사이트에서 데이터를 가져오는 것을 나타냅니다.")]),t._v(" "),a("p",[t._v("4개의 작업자(worker) 프로세스와 평범한 벤치마킹 도구를 사용합니다.:")]),t._v(" "),a("ul",[a("li",[t._v("30.10초 동안 "),a("strong",[t._v("956")]),t._v("건의 요청이 이뤄졌습니다.")]),t._v(" "),a("li",[t._v("또는 약 "),a("strong",[t._v("31.76")]),t._v(" 요청/초입니다.")])])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/sync"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync_handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Done."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("p",[t._v("비동기식 대안 "),a("code",[t._v("asyncio.sleep()")]),t._v("으로 변경하는 것만으로도 성능이 크게 변하는 것을 볼 수 있습니다.")]),t._v(" "),a("p",[t._v("동일한 4 개의 작업자(worker) 프로세스 사용:")]),t._v(" "),a("ul",[a("li",[t._v("30.08 초에 "),a("strong",[t._v("115,590")]),t._v(" 개의 요청")]),t._v(" "),a("li",[t._v("또는 초당 약 "),a("strong",[t._v("3,843.17")]),t._v(" 개 요청")])]),t._v(" "),a("p",[t._v("😳")]),t._v(" "),a("p",[t._v("좋아... 이건 말도 안되게 과장된 결과이며, 여러분이 보는 모든 벤치마크도 기본적으로 매우 편향되어 있습니다. 이 예는 웹 세계에서 "),a("code",[t._v("async/wait")]),t._v("의 이점을 과장되게 보여주기 위한 것입니다. 결과는 확실히 다를 것입니다. Sanic 및 기타 비동기 Python 라이브러리와 같은 도구는 코드를 총알처럼 빠르게 만드는 마법이 아닙니다. 코드를 더 "),a("em",[t._v("효율적으로")]),t._v(" 만드는 것입니다.")]),t._v(" "),a("p",[t._v("이 예에서는 비동기 버전이 훨씬 더 낫습니다. 한 요청이 기다리는 동안 다른 요청을 할 수 있고, 또 다른 요청을 할 수 있고, 또 다른 요청을 할 수 있고, 또 다른 요청을 할 수 있기 때문입니다.")]),t._v(" "),a("p",[t._v("하지만, 요점은 이것입니다! Sanic은 사용 가능한 리소스를 사용하고 성능을 압축하기 때문에 속도가 빠릅니다. 동시에 많은 요청을 처리할 수 있으므로 초당 더 많은 요청을 처리할 수 있습니다.")])]),t._v(" "),a("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/async"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("async_handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" asyncio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Done."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("일반적인 실수입니다!")]),t._v(" "),a("p",[t._v("이러지 마세요! 웹 사이트를 ping해야 할 때, 뭘 쓰시나요? "),a("code",[t._v("pip install your-fav-request-library")]),t._v(" 🙈")]),t._v(" "),a("p",[t._v("대신 "),a("code",[t._v("async / await")]),t._v(" 가 가능한 클라이언트를 사용해보세요. 당신의 서버가 고마워 할 것입니다. 차단(Blocking) 도구를 사용하지 말고 비동기 생태계에서 잘 작동하는 도구를 사용하세요. 추천이 필요한 경우 "),a("a",{attrs:{href:"https://github.com/mekicha/awesome-sanic",target:"_blank",rel:"noopener noreferrer"}},[t._v("Awesome Sanic"),a("OutboundLink")],1),t._v("을 확인하세요.")]),t._v(" "),a("p",[t._v("Sanic은 테스트 패키지(sanic-testing) 내에서 "),a("a",{attrs:{href:"https://www.python-httpx.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("httpx"),a("OutboundLink")],1),t._v("를 사용합니다. 😉.")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"완전히-주석이-달린-핸들러-a-fully-annotated-handler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#완전히-주석이-달린-핸들러-a-fully-annotated-handler"}},[t._v("#")]),t._v(" 완전히 주석이 달린 핸들러(A fully annotated handler)")]),t._v(" "),a("p",[t._v("타입 어노테이션(type annotations)을 사용하는 경우...")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" HTTPResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Request\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/typed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("typed_handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" HTTPResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Done."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);