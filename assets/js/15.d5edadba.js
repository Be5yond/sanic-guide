(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{406:function(t,e,a){t.exports=a.p+"assets/img/sanic-ext-redoc.e6f42bfa.png"},407:function(t,e,a){t.exports=a.p+"assets/img/sanic-ext-swagger.faaa65ab.png"},583:function(t,e,a){"use strict";a.r(e);var s=a(21),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"basics"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basics"}},[t._v("#")]),t._v(" Basics")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Side note")]),t._v(" "),s("p",[t._v("The OpenAPI implementation in Sanic Extensions is based upon the OAS3 implementation from "),s("a",{attrs:{href:"https://github.com/sanic-org/sanic-openapi",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("sanic-openapi")]),s("OutboundLink")],1),t._v(". In fact, Sanic Extensions is in a large way the successor to that project, which entered maintenance mode upon the release of Sanic Extensions. If you were previously using OAS3 with "),s("code",[t._v("sanic-openapi")]),t._v(" you should have an easy path to upgrading to Sanic Extensions. Unfortunately, this project does "),s("em",[t._v("NOT")]),t._v(" support the OAS2 specification.")])]),t._v(" "),s("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("p",[t._v("Out of the box, Sanic Extensions provides automatically generated API documentation using the "),s("a",{attrs:{href:"https://swagger.io/specification/",target:"_blank",rel:"noopener noreferrer"}},[t._v("v3.0 OpenAPI specification"),s("OutboundLink")],1),t._v(". There is nothing special that you need to do")])]),t._v(" "),s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sanic "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Sanic\n\napp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sanic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyApp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add all of your views")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("After doing this, you will now have beautiful documentation already generated for you based upon your existing application:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://localhost:8000/docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8000/docs"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://localhost:8000/docs/redoc",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8000/docs/redoc"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://localhost:8000/docs/swagger",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8000/docs/swagger"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("Checkout the "),s("RouterLink",{attrs:{to:"/en/plugins/sanic-ext/configuration.html"}},[t._v("section on configuration")]),t._v(" to learn about changing the routes for the docs. You can also turn off one of the two UIs, and customize which UI will be available on the "),s("code",[t._v("/docs")]),t._v(" route.")],1),t._v(" "),s("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("p",[t._v("Using "),s("a",{attrs:{href:"https://github.com/Redocly/redoc",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redoc"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:a(406),alt:"Redoc"}})])]),t._v(" "),s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("p",[t._v("or "),s("a",{attrs:{href:"https://github.com/swagger-api/swagger-ui",target:"_blank",rel:"noopener noreferrer"}},[t._v("Swagger UI"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:a(407),alt:"Swagger UI"}})])])]),t._v(" "),s("h2",{attrs:{id:"changing-specification-metadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changing-specification-metadata"}},[t._v("#")]),t._v(" Changing specification metadata")]),t._v(" "),s("div",{staticClass:"multicolumn",staticStyle:{display:"flex","flex-direction":"row","align-items":"flex-start"}},[s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("p",[t._v("If you want to change any of the metada, you should use the "),s("code",[t._v("describe")]),t._v(" method.")]),t._v(" "),s("p",[t._v("In this example "),s("code",[t._v("dedent")]),t._v(" is being used with the "),s("code",[t._v("description")]),t._v(" argument to make multi-line strings a little cleaner. This is not necessary, you can pass any string value here.")])]),t._v(" "),s("div",{staticClass:"multicolumn-column",staticStyle:{"flex-grow":"1","flex-basis":"0"}},[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" textwrap "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" dedent\n\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("openapi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("describe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Testing API"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.2.3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    description"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dedent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        # Info\n        This is a description. It is a good place to add some _extra_ doccumentation.\n\n        **MARKDOWN** is supported.\n        """')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);